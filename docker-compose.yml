version: '3'  # 版本号 无所谓
services:
  node-server: # service name 不重复即可
    # 就是 docker build -t image(下面第八行填入的字段) .
    build:
      context: . # 当前目录
      dockerfile: Dockerfile # 基于 Dockerfile 构建
    image: node-server # 依赖于当前 Dockerfile 创建出来的镜像
    container_name: node-server # 镜像的名称 b
    ports:
      - 8081:3033 # 宿主机通过 8081 访问
  editor-mysql:
    image: mysql # 引用官网 mysql 镜像
    container_name: editor-mysql
    restart: always # 出错则重启
    privileged: true # 高权限，执行下面的 mysql/init 设置上就行
    command: --default-authentication-plugin=mysql_native_password # 远程访问
    ports:
      - 3305:3306 # 宿主机可以用 127.0.0.1:3305 即可连接容器中的数据库，和 redis 一样
    volumes:
      - .docker-volumes/mysql/log:/var/log/mysql # 记录日志
      - .docker-volumes/mysql/data:/var/lib/mysql # 数据持久化
      - ./mysql/init:/docker-entrypoint-initdb.d/ # 初始化 sql（具体见下文件）
    environment:
      - MYSQL_DATABASE=test # 初始化容器时创建数据库
      - MYSQL_ROOT_PASSWORD=crouch11 #mysql 密码
      - TZ=Asia/Shanghai # 设置时区